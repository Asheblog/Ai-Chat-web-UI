# =======================================================
# AI聊天平台环境变量配置示例
# 复制此文件为 .env 并根据需要修改配置
# =======================================================

# ==================== 环境配置 ====================
# 运行环境: development | production
NODE_ENV=production

# ==================== 后端配置 ====================

# —— 推理链（Chain of Thought / Reasoning）——
# 是否启用推理链识别（含供应商 reasoning_content 以及标签抽取）。默认 true
REASONING_ENABLED=true

# 是否将思维链保存到数据库 messages.reasoning，默认 true（按你的要求）
REASONING_SAVE_TO_DB=true

# 默认是否展开思维链折叠块（仅影响前端默认行为；实际前端也可自行记忆状态）
REASONING_DEFAULT_EXPAND=false

# 推理标签模式：default/custom/off
# default 使用常见标签（<think>…</think>、<|begin_of_thought|>… 等）
# custom 使用自定义标签（下行 JSON 必须为 [startTag, endTag]）
# off    关闭标签抽取（仍会处理供应商原生 reasoning_content）
REASONING_TAGS_MODE=default

# 自定义标签（JSON 字符串），示例：["<think>","</think>"]
#REASONING_CUSTOM_TAGS=["<think>","</think>"]

# 服务端流分片最小聚合（不强制使用，仅作参考默认值）
STREAM_DELTA_CHUNK_SIZE=1

# —— 供应商参数（可选） ——
# OpenAI reasoning effort（low|medium|high）。为空表示不设置，由模型默认处理
#OPENAI_REASONING_EFFORT=medium

# Ollama think 开关（仅在对接 Ollama 有效）
#OLLAMA_THINK=false
# 后端服务端口（宿主机对外暴露端口）
BACKEND_PORT=3001

# 数据库连接 (SQLite文件路径)
DATABASE_URL=file:./data/app.db

# JWT密钥 (生产环境请务必修改！)
JWT_SECRET=aichat-super-secret-jwt-key-2025-production-change-me

# 应用模式: single | multi
# single: 单用户模式，禁用新用户注册
# multi: 多用户模式，允许管理员控制注册
APP_MODE=single

# 默认上下文Token限制（建议 4000，过大将显著增加内存/延迟）
DEFAULT_CONTEXT_TOKEN_LIMIT=120000

# 默认管理员账户 (首次启动时创建)
DEFAULT_ADMIN_USERNAME=admin
DEFAULT_ADMIN_PASSWORD=admin123456

# CORS配置 (是否启用与允许来源)
# 若前端通过同源反代（推荐），可保持开启但无需严格限制来源
ENABLE_CORS=true
CORS_ORIGIN=http://localhost:3000

# 日志级别: debug | info | warn | error
LOG_LEVEL=info

# ==================== 前端配置 ====================
# 前端服务端口
FRONTEND_PORT=3000

# 前端访问后端API的地址（浏览器端使用相对路径，避免跨设备 localhost 问题）
NEXT_PUBLIC_API_URL=/api

# （可选）前端服务端反向代理目标，仅 Next.js 服务器使用，不暴露给浏览器
# 若使用 Docker Compose，前端容器会自动设置 BACKEND_HOST=backend 与 BACKEND_INTERNAL_PORT=8001
# BACKEND_HOST=localhost
# BACKEND_INTERNAL_PORT=8001

# ==================== 可选配置 ====================
# API超时时间 (毫秒)
API_TIMEOUT=30000

# 最大文件上传大小 (MB)
MAX_FILE_SIZE=10

# 是否启用Swagger文档
ENABLE_SWAGGER=true

# 数据库连接池配置
DB_POOL_MIN=1
DB_POOL_MAX=10

# Redis配置 (可选，用于缓存)
# REDIS_URL=redis://localhost:6379

# 邮件配置 (可选，用于用户注册验证)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-app-password

# 聊天图片本地存储配置（可选）
# CHAT_IMAGE_DIR：图片保存目录，可填绝对路径或相对项目根目录的相对路径，默认 storage/chat-images
#CHAT_IMAGE_DIR=/data/aichat/chat-images
# CHAT_IMAGE_PUBLIC_PATH：浏览器访问图片的前缀路径，默认 /chat-images（反向代理需放行该路径）
#CHAT_IMAGE_PUBLIC_PATH=/chat-images
# CHAT_IMAGE_RETENTION_DAYS：图片保留天数，整数 >=0，默认 30；设为 0 表示仅保留当前会话，写入后立即清理老文件
#CHAT_IMAGE_RETENTION_DAYS=30
# CHAT_IMAGE_BASE_URL：默认图片访问域名（含协议）。若系统设置中未填写，将使用此值或自动检测局域网地址
#CHAT_IMAGE_BASE_URL=https://chat.example.com

# ==================== 生产环境优化 ====================
# 生产环境请确保以下配置：
# 1. 修改JWT_SECRET为强密钥
# 2. 修改DEFAULT_ADMIN_USERNAME和DEFAULT_ADMIN_PASSWORD
# 3. 设置适当的CORS_ORIGIN
# 4. 启用HTTPS (反向代理配置)
# 5. 配置适当的日志级别
# 6. 设置资源限制 (docker-compose.yml中)
