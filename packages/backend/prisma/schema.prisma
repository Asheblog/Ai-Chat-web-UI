// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// 1. 用户表
model User {
  id             Int      @id @default(autoincrement())
  username       String   @unique
  hashedPassword String
  role           String   @default("USER") // 'ADMIN' or 'USER'
  createdAt      DateTime @default(now())

  modelConfigs  ModelConfig[]
  chatSessions  ChatSession[]

  @@map("users")
}

// 2. 模型配置表
model ModelConfig {
  id        Int      @id @default(autoincrement())
  userId    Int?     // 如果为 null，则为系统模型
  name      String
  apiUrl    String
  apiKey    String   // 加密存储
  supportsImages Boolean  @default(false) // 是否支持图片输入（Vision）
  createdAt DateTime @default(now())

  user         User?          @relation(fields: [userId], references: [id], onDelete: Cascade)
  chatSessions ChatSession[]

  @@map("model_configs")
}

// 3. 聊天会话表
model ChatSession {
  id            Int       @id @default(autoincrement())
  userId        Int
  modelConfigId Int
  title         String    // 可由首条消息自动生成
  createdAt     DateTime  @default(now())
  // 会话级推理默认：为空表示遵循系统设置
  reasoningEnabled Boolean?
  reasoningEffort  String?   // 'low' | 'medium' | 'high'
  ollamaThink      Boolean?

  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  modelConfig ModelConfig @relation(fields: [modelConfigId], references: [id])
  messages    Message[]
  usageMetrics UsageMetric[]

  @@map("chat_sessions")
}

// 4. 消息记录表
model Message {
  id        Int      @id @default(autoincrement())
  sessionId Int
  role      String   // 'user' or 'assistant'
  content   String
  // 可选：保存推理(思维链)内容与持续时长（秒）。默认不启用保存，受系统设置控制。
  reasoning               String?
  reasoningDurationSeconds Int?
  createdAt DateTime @default(now())

  session ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  usageMetrics UsageMetric[]

  @@map("messages")
}

// 6. 用量统计表（每轮生成一条，关联到 assistant 消息）
model UsageMetric {
  id               Int       @id @default(autoincrement())
  sessionId        Int
  messageId        Int?
  model            String
  provider         String?
  promptTokens     Int       @default(0)
  completionTokens Int       @default(0)
  totalTokens      Int       @default(0)
  contextLimit     Int?
  createdAt        DateTime  @default(now())

  session ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  message Message?     @relation(fields: [messageId], references: [id], onDelete: SetNull)

  @@index([sessionId])
  @@index([messageId])
  @@map("usage_metrics")
}

// 5. 系统设置表
model SystemSetting {
  key   String @id
  value String

  @@map("system_settings")
}
